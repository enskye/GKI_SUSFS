# .github/workflows/build-kernel.yml

name: Build Android Kernel with KernelSU & susfs4ksu

on:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build:
    name: Build GKI Kernel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          # CORRECTED: Updated package names for modern Ubuntu versions
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses-dev libsdl2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python3

      - name: Set up AOSP Repo Tool
        run: |
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          sudo ln -sf ~/.bin/repo /usr/bin/repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Initialize & Sync Kernel Source
        run: |
          mkdir kernel && cd kernel
          # Initialize repo for the specified kernel branch
          repo init -u https://android.googlesource.com/kernel/manifest -b android14-6.1-lts --depth=1
          # Sync the repositories
          repo sync -c --no-tags --no-clone-bundle -j$(nproc --all)

      - name: Integrate susfs4ksu
        working-directory: ./kernel/common
        run: |
          # Add the susfs4ksu repository as a remote
          git remote add susfs https://gitlab.com/simonpunk/susfs4ksu.git
          # Fetch the remote branch
          git fetch --depth=1 susfs gki-android14-6.1
          # Merge the susfs4ksu changes
          git merge susfs/gki-android14-6.1 --no-edit
          echo "✅ susfs4ksu integrated successfully."

      - name: Integrate KernelSU
        working-directory: ./kernel
        run: |
          # Download and run the KernelSU integration script
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          echo "✅ KernelSU integrated successfully."

      - name: Build Kernel with Bazel (Kleaf)
        id: build
        working-directory: ./kernel
        run: |
          # Set up environment variables
          export ARCH=arm64
          export DIST_DIR=out
          # Start the build process using the official build script
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
          echo "✅ Kernel build completed."
          # List the contents of the output directory
          echo "Contents of $DIST_DIR:"
          ls -R $DIST_DIR

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-artifacts
          path: kernel/out/
          if-no-files-found: error
          
