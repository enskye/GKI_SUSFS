name: Build Android GKI Kernel with Bazel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git wget curl build-essential bc flex bison libssl-dev libelf-dev python3
        
    - name: Install Bazel
      run: |
        wget -O bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64
        chmod +x bazel
        sudo mv bazel /usr/local/bin/
        
    - name: Sync sources
      run: |
        git clone https://android.googlesource.com/kernel/build.git
        cd build
        git clone -b android14-6.1-lts --depth=1 https://android.googlesource.com/kernel/common.git
        
    - name: Setup KernelSU
      run: |
        cd build/common
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
        
    - name: Setup SUSFS4KSU
      run: |
        cd build/common
        mkdir -p KernelSU/userspace
        git clone -b gki-android14-6.1 --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git KernelSU/userspace/susfs4ksu
        
    - name: Apply patches
      run: |
        cd build/common
        
        # KernelSU integration
        echo 'source "KernelSU/Kconfig"' >> drivers/Kconfig
        echo 'obj-$(CONFIG_KSU) += KernelSU/' >> drivers/Makefile
        
        # SUSFS patch
        if [ -f "KernelSU/userspace/susfs4ksu/kernel_patches/susfs_for_ksu.patch" ]; then
          patch -p1 < KernelSU/userspace/susfs4ksu/kernel_patches/susfs_for_ksu.patch || echo "Patch failed"
        fi
        
    - name: Configure kernel for KernelSU and SUSFS4KSU
      run: |
        cd build
        
        # Create fragment config for KernelSU and SUSFS4KSU
        cat > gki_ksu_susfs.fragment << 'EOF'
        CONFIG_KSU=y
        CONFIG_KSU_DEBUG=y
        CONFIG_SUSFS=y
        CONFIG_SUSFS_SUS_SU=y
        CONFIG_SUSFS_SUS_MOUNT=y
        CONFIG_SUSFS_SUS_KSTAT=y
        CONFIG_SUSFS_SUS_OVERLAYFS=y
        CONFIG_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
        CONFIG_SUSFS_SUS_PATH=y
        CONFIG_SUSFS_TRY_UMOUNT=y
        EOF
        
        # Create build config for GKI with KernelSU and SUSFS4KSU
        cat > build.config.gki.aarch64.ksu << 'EOF'
        ARCH=arm64
        BRANCH=android14-6.1-lts
        CLANG_TRIPLE=aarch64-linux-gnu-
        CROSS_COMPILE=aarch64-linux-android-
        DEFCONFIG=gki_defconfig
        KERNEL_DIR=common
        FRAGMENT_CONFIG=gki_ksu_susfs.fragment
        EOF
        
    - name: Build with Bazel
      run: |
        cd build
        BUILD_CONFIG=build.config.gki.aarch64.ksu ./build.sh
        
    - name: Prepare artifacts
      run: |
        cd build
        mkdir -p artifacts
        
        # Find and copy built kernel images
        find bazel-bin -name "Image" -type f -exec cp {} artifacts/ \;
        find bazel-bin -name "Image.gz" -type f -exec cp {} artifacts/ \;
        find bazel-bin -name "Image.lz4" -type f -exec cp {} artifacts/ \;
        find bazel-bin -name "*.img" -type f -exec cp {} artifacts/ \;
        
        # Create build info
        echo "Build completed: $(date)" > artifacts/build-info.txt
        echo "KernelSU: Enabled" >> artifacts/build-info.txt
        echo "SUSFS4KSU: Enabled (gki-android14-6.1 branch)" >> artifacts/build-info.txt
        echo "Kernel: android14-6.1-lts" >> artifacts/build-info.txt
        
        ls -la artifacts/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gki-kernel-ksu-susfs
        path: build/artifacts/
        retention-days: 30
