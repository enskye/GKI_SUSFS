name: GKI Kernel Build with KernelSU + SUSFS4KSU

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-22.04

    steps:
      # 1. Checkout workflow repo (for SUSFS4KSU patches)
      - name: Checkout workflow repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y bc bison build-essential flex patch zip curl libssl-dev \
            python3 rsync unzip wget git ccache libncurses5-dev

      # 3. Install repo tool
      - name: Install repo tool
        run: |
          mkdir -p ~/.bin
          PATH="${HOME}/.bin:${PATH}"
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo

      # 4. Initialize and sync kernel source
      - name: Sync kernel source
        run: |
          mkdir -p kernel_src
          cd kernel_src
          repo init -u https://android.googlesource.com/kernel/common -b android14-6.1-lts
          repo sync -j$(nproc)

      # 5. Setup KernelSU
      - name: Setup KernelSU
        run: |
          cd kernel_src
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

      # 6. Copy SUSFS4KSU patches to kernel
      - name: Copy SUSFS4KSU patches
        run: |
          cp ./susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch kernel_src/KernelSU/
          cp ./susfs4ksu/kernel_patches/50_add_susfs_in_kernel-android14-6.1.patch kernel_src/
          cp ./susfs4ksu/kernel_patches/fs/susfs.c kernel_src/fs/
          cp ./susfs4ksu/kernel_patches/include/linux/susfs.h kernel_src/include/linux/

      # 7. Apply SUSFS4KSU patches
      - name: Patch SUSFS4KSU
        run: |
          cd kernel_src/KernelSU
          patch -p1 < 10_enable_susfs_for_ksu.patch
          cd ../
          patch -p1 < 50_add_susfs_in_kernel-android14-6.1.patch || echo "Check failed patches manually"

      # 8. Remove recommended exports for GKI2
      - name: Remove recommended symbols
        run: |
          rm -f kernel_src/common/android/abi_gki_protected_exports_*

      # 9. Build kernel with Bazel
      - name: Build kernel
        run: |
          cd kernel_src
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 tools/bazel run //common:kernel_aarch64_dist -- --destdir=out

      # 10. Upload artifacts
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gki_kernel_artifacts
          path: kernel_src/out/*
